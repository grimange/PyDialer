# Generated by Django 5.2.5 on 2025-08-22 01:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agents', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('campaign_type', models.CharField(choices=[('outbound', 'Outbound'), ('inbound', 'Inbound'), ('blended', 'Blended')], default='outbound', max_length=20)),
                ('status', models.CharField(choices=[('inactive', 'Inactive'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='inactive', max_length=20)),
                ('dial_method', models.CharField(choices=[('manual', 'Manual'), ('ratio', 'Ratio'), ('predictive', 'Predictive'), ('progressive', 'Progressive'), ('auto', 'Auto')], default='ratio', max_length=20)),
                ('pacing_ratio', models.DecimalField(decimal_places=2, default=2.5, help_text='Ratio of calls to available agents (1.0-10.0)', max_digits=5, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(10.0)])),
                ('drop_sla', models.DecimalField(decimal_places=2, default=5.0, help_text='Maximum acceptable abandonment rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('answer_timeout', models.IntegerField(default=30, help_text='Timeout in seconds for call answer')),
                ('wrap_up_time', models.IntegerField(default=30, help_text='Default wrap-up time in seconds')),
                ('caller_id', models.CharField(help_text='Outbound caller ID number', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('caller_id_name', models.CharField(blank=True, help_text='Caller ID name', max_length=50)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(default='08:00', help_text='Daily start time')),
                ('end_time', models.TimeField(default='18:00', help_text='Daily end time')),
                ('timezone_name', models.CharField(default='UTC', max_length=50)),
                ('monday', models.BooleanField(default=True)),
                ('tuesday', models.BooleanField(default=True)),
                ('wednesday', models.BooleanField(default=True)),
                ('thursday', models.BooleanField(default=True)),
                ('friday', models.BooleanField(default=True)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('max_attempts', models.IntegerField(default=3, help_text='Maximum call attempts per lead')),
                ('retry_delay_minutes', models.IntegerField(default=60, help_text='Minutes between retry attempts')),
                ('recycle_inactive_leads', models.BooleanField(default=True)),
                ('enable_amd', models.BooleanField(default=True, help_text='Enable Answer Machine Detection')),
                ('enable_call_recording', models.BooleanField(default=True)),
                ('require_agent_confirmation', models.BooleanField(default=False)),
                ('total_leads', models.IntegerField(default=0)),
                ('completed_calls', models.IntegerField(default=0)),
                ('successful_contacts', models.IntegerField(default=0)),
                ('current_drop_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_started_at', models.DateTimeField(blank=True, null=True)),
                ('last_stopped_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('required_skills', models.ManyToManyField(blank=True, help_text='Skills required for agents on this campaign', to='agents.agentskill')),
            ],
            options={
                'db_table': 'campaigns',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CampaignAgentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1, help_text='Priority for call distribution (1=highest)')),
                ('max_calls_per_hour', models.IntegerField(blank=True, help_text='Maximum calls per hour for this agent on this campaign', null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agent_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaigns.campaign')),
            ],
            options={
                'db_table': 'campaign_agent_assignments',
                'ordering': ['priority', 'assigned_at'],
                'unique_together': {('campaign', 'agent')},
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='assigned_agents',
            field=models.ManyToManyField(related_name='assigned_campaigns', through='campaigns.CampaignAgentAssignment', through_fields=('campaign', 'agent'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CampaignSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_type', models.CharField(choices=[('holiday', 'Holiday'), ('special_hours', 'Special Hours'), ('blackout', 'Blackout Period')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('is_active_override', models.BooleanField(default=False, help_text='Override campaign active status during this period')),
                ('pacing_ratio_override', models.DecimalField(blank=True, decimal_places=2, help_text='Override pacing ratio during this period', max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='campaigns.campaign')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'campaign_schedules',
                'ordering': ['start_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='CampaignStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_calls', models.IntegerField(default=0)),
                ('agents_logged_in', models.IntegerField(default=0)),
                ('agents_available', models.IntegerField(default=0)),
                ('agents_on_call', models.IntegerField(default=0)),
                ('calls_attempted_today', models.IntegerField(default=0)),
                ('calls_completed_today', models.IntegerField(default=0)),
                ('calls_answered_today', models.IntegerField(default=0)),
                ('calls_dropped_today', models.IntegerField(default=0)),
                ('average_call_duration', models.DurationField(blank=True, null=True)),
                ('average_wrap_time', models.DurationField(blank=True, null=True)),
                ('contact_rate_today', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('conversion_rate_today', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_reset_date', models.DateField(auto_now_add=True)),
                ('campaign', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='campaigns.campaign')),
            ],
            options={
                'db_table': 'campaign_statistics',
            },
        ),
    ]
